@using Application.Core.UI.HtmlHelpers
@model LMPlatform.UI.ViewModels.SubjectViewModels.SubjectEditViewModel

<style>


.funkyradio label {
  width: 100%;
  border-radius: 3px;
  border: 1px solid #D1D3D4;
  font-weight: normal;
}

.funkyradio input[type="radio"]:empty,
.funkyradio input[type="checkbox"]:empty {
  display: none;
}

.funkyradio input[type="radio"]:empty ~ label,
.funkyradio input[type="checkbox"]:empty ~ label {
  position: relative;
  line-height: 2.5em;
  text-indent: 3.25em;
  margin-top: 2em;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.funkyradio input[type="radio"]:empty ~ label:before,
.funkyradio input[type="checkbox"]:empty ~ label:before {
  position: absolute;
  display: block;
  top: 0;
  bottom: 0;
  left: 0;
  content: '';
  width: 2.5em;
  background: #D1D3D4;
  border-radius: 3px 0 0 3px;
}

.funkyradio input[type="radio"]:hover:not(:checked) ~ label,
.funkyradio input[type="checkbox"]:hover:not(:checked) ~ label {
  color: #888;
}

.funkyradio input[type="radio"]:hover:not(:checked) ~ label:before,
.funkyradio input[type="checkbox"]:hover:not(:checked) ~ label:before {
  content: '\2714';
  text-indent: .9em;
  color: #C2C2C2;
}

.funkyradio input[type="radio"]:checked ~ label,
.funkyradio input[type="checkbox"]:checked ~ label {
  color: #777;
}

.funkyradio input[type="radio"]:checked ~ label:before,
.funkyradio input[type="checkbox"]:checked ~ label:before {
  content: '\2714';
  text-indent: .9em;
  color: #333;
  background-color: #ccc;
}

.funkyradio input[type="radio"]:focus ~ label:before,
.funkyradio input[type="checkbox"]:focus ~ label:before {
  box-shadow: 0 0 0 3px #999;
}

.funkyradio-default input[type="radio"]:checked ~ label:before,
.funkyradio-default input[type="checkbox"]:checked ~ label:before {
  color: #333;
  background-color: #ccc;
}

.funkyradio-primary input[type="radio"]:checked ~ label:before,
.funkyradio-primary input[type="checkbox"]:checked ~ label:before {
  color: #fff;
  background-color: #337ab7;
}

.funkyradio-success input[type="radio"]:checked ~ label:before,
.funkyradio-success input[type="checkbox"]:checked ~ label:before {
  color: #fff;
  background-color: #5cb85c;
}

.funkyradio-danger input[type="radio"]:checked ~ label:before,
.funkyradio-danger input[type="checkbox"]:checked ~ label:before {
  color: #fff;
  background-color: #d9534f;
}

.funkyradio-warning input[type="radio"]:checked ~ label:before,
.funkyradio-warning input[type="checkbox"]:checked ~ label:before {
  color: #fff;
  background-color: #f0ad4e;
}

.funkyradio-info input[type="radio"]:checked ~ label:before,
.funkyradio-info input[type="checkbox"]:checked ~ label:before {
  color: #fff;
  background-color: #5bc0de;
}

</style>
<div id="editSubject">

    @using (Html.BeginForm("SaveSubject", "Subject", FormMethod.Post))
    {
        <div>
            @Html.ValidationSummary("Ошибка!", new { @class = "alert alert-dismissable alert-danger" })
        </div>
    
        @Html.AntiForgeryToken()
        
        @Html.HiddenFor(e => e.SubjectId)
        @Html.HiddenFor(e => e.Title)
        <div>
            @Html.LabelFor(e => e.DisplayName, new { @class = "control-label" })
            @Html.TextBoxFor(e => e.DisplayName, new { @class = "form-control", @style = "float:left" })
            @Html.ValidationMessageFor(e => e.DisplayName, " ")
        </div>
        <div class="clear-fix"></div>
        <div>
            @Html.LabelFor(e => e.ShortName, new { @class = "control-label" })
            @Html.TextBoxFor(e => e.ShortName, new { @class = "form-control", @style = "float:left"  })
            @Html.ValidationMessageFor(e => e.ShortName, " ")
        </div>
        <div>
	        <div style="margin-bottom: -20px; margin-top: 70px;">
		        <h3>Модули</h3>
	        </div>
	        <div style="font-size: 12px; float: right; margin-bottom: -20px;">Выберите необходимые модули</div>
			<div class="clear-fix"></div>
			<div class="funkyradio row">
				@{
		var index = 0;
		foreach (var module in Model.Modules)
		{
			if (module.Name == "Методические материалы")
   {
	   index = index + 0;
   }
			else { 
			var id = "Modules_" + index + "__Checked";
			<div class="col-md-6">
				
				@Html.Hidden("Modules[" + index + "].ModuleId", module.ModuleId)
				@Html.Hidden("Modules[" + index + "].Name", module.Name)
				@Html.Hidden("Modules[" + index + "].Type", module.Type)
				@*<div style="float: left; margin-left: 5px; width: 40%" >
						<label class="checkbox">@Html.CheckBox("Modules[" + index + "].Checked", module.Checked) @module.Name</label>
					</div>*@

				<div class="funkyradio-success">
					@Html.CheckBox("Modules[" + index + "].Checked", module.Checked)
					<label for="@id">@module.Name</label>
				</div>
				@{
			index++;
			
				}
			</div>}
		}
				}
			</div>
			
            <div class="clear-fix"></div>
        </div>
		<div>
			<div>
				<h3>Цвет предмета</h3>
			</div>
			<div>
				<input type="color" id="html5colorpicker" name="html5colorpicker" value="@Model.Color" style="width:260px;height: 30px">
			</div>
		</div>
        <div>
            <div>
                <h3>Группы</h3>
            </div>
	        <div>
				@Html.ListBoxFor(e => e.SelectedGroups, Model.Groups.OrderBy(e => e.Text), new { Multiple = "multiple", @style = "width: 100%; height: 100px", @class = "multiselect" })
		        @*@Html.ListBoxFor(e => e.SelectedGroups, Model.Groups.OrderBy(e => e.Text), new {Multiple = "multiple", @class = "multiselect"})*@
		        @*@Html.ListBoxFor(m => m.SelectedGroups, new MultiSelectList(Model.Groups, "Value", "Text"), new {@style ="width: 100%; height:50px", @class = "multiselect"})*@
	        </div>
        </div>
    }

    <div>
    </div>
</div>
<script type="text/javascript">
    $('#editSubject a').tooltip(
    {
        placement: "right",
    });

    shared.initPlugins();
</script>
<style>
	#editSubject .dropdown-menu {
		position: relative;
	}
</style>

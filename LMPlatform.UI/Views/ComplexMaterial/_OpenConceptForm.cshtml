@model LMPlatform.UI.ViewModels.ComplexMaterialsViewModel.AddOrEditConceptViewModel
<div id="memoForm" style="text-align:center;">
    <a id="zoom-plusF" style="text-decoration: none;" class="btn btn-link btn-sm"><i style="margin-right: 10px;" class="fa fa-plus"></i>Увеличить</a>
    <a id="zoom-minusF" style="text-decoration: none;" class="btn btn-link btn-sm"><i style="margin-right: 10px;" class="fa fa-minus"></i>Уменьшить</a>
    <a id="move-prevF" style="text-decoration: none;" class="btn btn-link btn-sm"><i style="margin-right: 10px;" class=" glyphicon glyphicon-backward"></i>Предыдущий</a>
    <a id="move-nextF" style="text-decoration: none;" class="btn btn-link btn-sm">Следующий<i style="margin-left: 10px;" class="glyphicon glyphicon-forward"></i></a>
    <div id="dataContainer" style=" text-align: center; overflow: auto;"></div>
    <a id="zoom-plusL" style="text-decoration: none;" class="btn btn-link btn-sm"><i style="margin-right: 10px;" class="fa fa-plus"></i>Увеличить</a>
    <a id="zoom-minusL" style="text-decoration: none;" class="btn btn-link btn-sm"><i style="margin-right: 10px;" class="fa fa-minus"></i>Уменьшить</a>
    <a id="move-prevL" style="text-decoration: none;" class="btn btn-link btn-sm"><i style="margin-right: 10px;" class=" glyphicon glyphicon-backward"></i>Предыдущий</a>
    <a id="move-nextL" style="text-decoration: none;" class="btn btn-link btn-sm">Следующий<i style="margin-left: 10px;" class="glyphicon glyphicon-forward"></i></a>
</div>
<style>
    .pdf-page {
        border: 1px solid black;
        margin: 10px;
    }
</style>
<script src="~/Scripts/application/ComplexMaterials/extension.js"></script>
<script src="~/Scripts/application/ComplexMaterials/BaseLoader.js"></script>
<script src="~/Scripts/application/ComplexMaterials/PDFLoader.js"></script>
<script src="~/Scripts/application/ComplexMaterials/VideoLoader.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        var pdfLoader = new PDFLoader($('#dataContainer'), $(".loading"), $(document), $("#myModalLabel"));
        var videoLoader = new VideoLoader($('#dataContainer'), $(".loading"), $(document), $("#myModalLabel"));
        var uiHelper = new DilogUIHelper($(document), $('#dataContainer'));
        var currentLoader = null;

        function initEventHandlers() {
            $("#zoom-plusF").on("click", zoomPlus);
            $("#zoom-plusL").on("click", zoomPlus);

            $("#zoom-minusF").on("click", zoomMinus);
            $("#zoom-minusL").on("click", zoomMinus);

            $("#move-nextF").on("click", moveNext);
            $("#move-nextL").on("click", moveNext);

            $("#move-prevF").on("click", movePrev);
            $("#move-prevL").on("click", movePrev);
        }

        function resizeDialog() {
            $('.modal-dialog').width(($(document).width() * 0.75) + 'px');
        }
        initEventHandlers();
        resizeDialog();

        function zoomPlus() {
            currentLoader.zoomPlus();
        }

        function zoomMinus() {
            currentLoader.zoomMinus();
        }

        function moveNext() {
            debugger
            var url = "/Services/Concept/ConceptService.svc/GetNextConceptData?elementId=" + currentId;
            loadConceptAttach(url);
        }

        function movePrev() {
            var url = "/Services/Concept/ConceptService.svc/GetPrevConceptData?elementId=" + currentId;
            loadConceptAttach(url);
        }

        function getFileExtension(filepath) {
            return filepath.slice((filepath.lastIndexOf(".") - 1 >>> 0) + 2);
        }

        function getLoader(filepath) {
            if (filepath.length < 1) {
                throw new Error("Невалидный путь файла");
            }

            var ext = getFileExtension(filepath);
            if(ext.toUpperCase()==="PDF")
                return pdfLoader
            if (ext.toUpperCase() === "WMV" || ext.toUpperCase() === "FLV" || ext.toUpperCase() === "MP4")
                return videoLoader;

            throw new Error("Не поддерживаемый формат загрузчика")
        }

        function loadConceptAttach(servicePath) {
            var scope = this;
            $.get(servicePath)
            .done(function (data) {
                if (!data.HasData) {
                    uiHelper.showEmptyContainer("У файла нет связного элемента в этом направлении");
                    return;
                }
                currentLoader = getLoader(data.FullPath)
                
                if (data.HasAttach) {
                    currentLoader.loadData(data.FullPath);
                }
                else
                    uiHelper.showEmptyContainer("Пустой файл");
                currentLoader.updateHeader(data.Name);
                currentId = data.Id
            });
        }

        function loadConcept(filepath) {
            try {
                debugger;
                currentLoader = getLoader(filepath)
                currentLoader.loadData(filepath);
            }
            catch (e) {
                alertify.error(e.message);
                if (currentLoader)
                    currentLoader.stopSpin();
            }

        }

        var currentId = @Model.Id
        loadConcept('@Model.GetRelativePathForActiveAttachment()');
    })
      
</script>

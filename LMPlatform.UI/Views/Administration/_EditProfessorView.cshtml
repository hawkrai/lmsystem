@model LMPlatform.UI.ViewModels.AdministrationViewModels.ModifyLecturerViewModel

<div id="adminModal">
    @using (Ajax.BeginForm("EditProfessor", "Administration", new AjaxOptions
    {
        Url = Url.Action("EditProfessorAjax"),
        OnSuccess = "successAjaxForm",
        HttpMethod = "POST"
    }))
    {
        <div class="error-limit-registr">
            @if (ViewBag.ResultSuccess != null && ViewBag.ResultSuccess)
            {
                <div class="validation-summary-errors alert alert-success">
                    <span>Сохранено</span>
                </div>
            }
            @Html.ValidationSummary("Ошибка!", new { @class = "alert alert-error" })
        </div>
        <div>
            <hgroup style="text-align: center; margin-bottom: 20px">
                <h1>@Model.FullName</h1>
            </hgroup>
            @Html.HiddenFor(m => m.UserName)
            @Html.HiddenFor(m => m.LecturerId)
			@Html.HiddenFor(m => m.Avatar)
            @Html.HiddenFor(m => m.IsActive)
            <div>
                @Html.LabelFor(m => m.Surname, new { @class = "control-label" })
                <div>
                    @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.Surname, " ")
                </div>
                <p></p>
            </div>
            <div>
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                <div>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.Name, " ")
                </div>
                <p></p>
            </div>
            <div>
                @Html.LabelFor(m => m.Patronymic, new { @class = "control-label" })
                <div>
                    @Html.TextBoxFor(m => m.Patronymic, new { @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.Patronymic, " ")
                </div>
                <p></p>
            </div>
            <div>
                @Html.LabelFor(m => m.IsSecretary, new { @class = "control-label" })
                <div>
                    @Html.CheckBoxFor(m => m.IsSecretary, new { @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.IsSecretary, " ")
                </div>
                <p></p>
            </div>
            <div id="SelectedGroupIdsHolder">
                @Html.LabelFor(m => m.SelectedGroupIds, new { @class = "control-label" })
                <div>
                    @Html.ListBoxFor(x => x.SelectedGroupIds, Model.Groups)
                    @Html.ValidationMessageFor(e => e.SelectedGroupIds, " ")
                </div>
                <p></p>
            </div>
            <div>
                @Html.LabelFor(m => m.IsLecturerHasGraduateStudents, new { @class = "control-label" })
                <div>
                    @Html.CheckBoxFor(m => m.IsLecturerHasGraduateStudents, new { @class = "form-control" })
                    @Html.ValidationMessageFor(e => e.IsLecturerHasGraduateStudents, " ")
                </div>
                <p></p>
            </div>
            <div>
                @Html.ActionLink("Сбросить пароль ", "ResetPassword", new { id = @Model.LecturerId })

                <p></p>
            </div>
        </div>
        <div class="modal-footer">
            <input type="button" class="btn btn-sm bootbox-close-button" value="Отмена" style="width: auto" />
            <input type="submit" class="btn btn-primary btn-sm" value="Сохранить" style="width: auto" />
        </div>
    }
</div>
<script type="text/javascript">
    $("#SelectedGroupIds").bootstrapDualListbox({ showFilterInputs: false });
    var alignSelectedGroupsElement = function() { $("#SelectedGroupIdsHolder").toggle($("#IsSecretary").prop("checked")); };
    $("#IsSecretary").off("click").on("click", alignSelectedGroupsElement);
    alignSelectedGroupsElement();
</script>

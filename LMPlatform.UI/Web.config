<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
		<section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" /><section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" /></sectionGroup></configSections>
    <connectionStrings>
      <add name="DefaultConnection" connectionString="data source=DESKTOP-GE7ID1L;initial catalog=LMPlatform1;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework" providerName="System.Data.SqlClient" />

  </connectionStrings>
  <appSettings>
    	<add key="webpages:Version" value="3.0.0.0" />
    	<add key="webpages:Enabled" value="false" />
    	<add key="PreserveLoginUrl" value="true" />
    	<add key="ClientValidationEnabled" value="true" />
    	<add key="UnobtrusiveJavaScriptEnabled" value="true" />
<add key="FileUploadPath" value="C://Projects//LMS//UploadedFiles//" />
	<add key="FileUploadPathTemp" value="C://Projects//LMS//UploadedFilesTemp//" />
	<add key="PlagiarismTempPath" value="C://Projects//LMS//PlagiarismTempPath//" />
    <add key="PlagiarismUrl" value="" />
    <add key="ScoFilePath" value="C://Projects//LMS//ScormObjects//" />
    <add key="TinCanFilePath" value="C://Projects//LMS//TinCanObjects//" />
    <add key="TestContentPath" value="C://Projects//LMS//UploadedTestFiles//" />
<add key="owin:AppStartup" value="LMPlatform.UI.Startup" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <!--<add assembly="WebMatrix.Data, Version=2.0.0.0, Culture=neutral,    PublicKeyToken=31bf3856ad364e35" />-->
        <add assembly="WebMatrix.WebData, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </assemblies>
    </compilation>
    <httpRuntime targetFramework="4.5" maxRequestLength="40960" maxQueryStringLength="2097151" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="2880" name="LMPlatform" />
    </authentication>
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
	<security>
      <requestFiltering>
        <requestLimits maxQueryString="2097151" maxAllowedContentLength="209715200" />
        <fileExtensions>
          <add fileExtension=".mp4" allowed="true" />
        </fileExtensions>
      </requestFiltering>
    </security>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.7.0" newVersion="5.2.7.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebMatrix.WebData" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). --><legacyHMACWarning enabled="0" /><!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 --></runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <system.serviceModel>
<client>
      <endpoint address="http://localhost:8880/plagiate/services/soapws" binding="basicHttpBinding" bindingConfiguration="SoapWSSoapBinding" contract="PlagiateReference.ISoapWS" name="SoapWSPort" />
    </client>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true">
      <serviceActivations>
        <add relativeAddress="~/NewsService.svc" service="LMPlatform.UI.Services.News.NewsService" />
        <add relativeAddress="~/LecturesService.svc" service="LMPlatform.UI.Services.Lectures.LecturesService" />
        <add relativeAddress="~/LabsService.svc" service="LMPlatform.UI.Services.Labs.LabsService" />
        <add relativeAddress="~/PracticalService.svc" service="LMPlatform.UI.Services.Practicals.PracticalService" />
        <add relativeAddress="~/MessagesService.svc" service="LMPlatform.UI.Services.Messages.MessagesService" />
        <add relativeAddress="~/ParentalService.svc" service="LMPlatform.UI.Services.Parental.ParentalService" />
        <add relativeAddress="~/CoreService.svc" service="LMPlatform.UI.Services.CoreService" />
        <add relativeAddress="~/FilesService.svc" service="LMPlatform.UI.Services.Files.FilesService" />
        <add relativeAddress="~/MaterialsService.svc" service="LMPlatform.UI.Services.Materials.MaterialsService" />
        <add relativeAddress="~/ConceptService.svc" service="LMPlatform.UI.Services.Concept.ConceptService" />
<add relativeAddress="~/SearchService.svc" service="LMPlatform.UI.Services.Search.SearchService" />
		  <add relativeAddress="~/ProjectsService.svc" service="LMPlatform.UI.Services.BTS.ProjectsService" />
		  <add relativeAddress="~/BugsService.svc" service="LMPlatform.UI.Services.BTS.BugsService" />
<add relativeAddress="~/SubjectsService.svc" service="LMPlatform.UI.Services.Subjects.SubjectsService" />
      </serviceActivations>
    </serviceHostingEnvironment>
    <bindings>
<basicHttpBinding>
        <binding name="SoapWSSoapBinding" sendTimeout="00:05:00" />
      </basicHttpBinding>
      <webHttpBinding>
        <binding name="WebConfiguration" writeEncoding="utf-8" maxBufferSize="2000000000" maxReceivedMessageSize="2000000000" transferMode="Streamed">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
        </binding>
      </webHttpBinding>
    </bindings>
    <behaviors>
      <endpointBehaviors>
        <behavior name="EndpointBehavior">
          <webHttp defaultBodyStyle="WrappedRequest" defaultOutgoingResponseFormat="Json" />
          <dataContractSerializer maxItemsInObjectGraph="10000000" />
        </behavior>
        <behavior name="WebBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="ServiceBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.News.NewsService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" bindingConfiguration="WebConfiguration" contract="LMPlatform.UI.Services.News.INewsService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Labs.LabsService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" bindingConfiguration="WebConfiguration" contract="LMPlatform.UI.Services.Labs.ILabsService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Lectures.LecturesService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" bindingConfiguration="WebConfiguration" contract="LMPlatform.UI.Services.Lectures.ILecturesService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Practicals.PracticalService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" bindingConfiguration="WebConfiguration" contract="LMPlatform.UI.Services.Practicals.IPracticalService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Messages.MessagesService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" bindingConfiguration="WebConfiguration" contract="LMPlatform.UI.Services.Messages.IMessagesService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Parental.ParentalService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.Parental.IParentalService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.CoreService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.ICoreService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Files.FilesService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.Files.IFilesService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Materials.MaterialsService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.Materials.IMaterialsService" />
      </service>
      <service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Concept.ConceptService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.Concept.IConceptService" />
      </service>
<service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Search.SearchService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.Search.ISearchService" />
		</service>
<service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.BTS.ProjectsService">
			<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
			<endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.BTS.IProjectsService" />
		</service>
		<service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.BTS.BugsService">
			<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
			<endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.BTS.IBugsService" />
		</service>
<service behaviorConfiguration="ServiceBehavior" name="LMPlatform.UI.Services.Subjects.SubjectsService">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <endpoint address="" behaviorConfiguration="EndpointBehavior" binding="webHttpBinding" contract="LMPlatform.UI.Services.Subjects.ISubjectsService" />
      </service>
    </services>
  </system.serviceModel>
<system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net><dotNetOpenAuth>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<reporting enabled="true" />
	<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. --><!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ --><openid>
		<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
				</behaviors>
			</relyingParty></openid></dotNetOpenAuth><uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri></configuration>